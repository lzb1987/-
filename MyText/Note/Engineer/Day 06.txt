Day 06 HTTP服务基础 网页内容访问 部署动态网站

一.HTTP服务基础
· 基于B/S(Browser/Server)架构的网页服务
 - 服务端提供网页
 - 浏览器下载并显示网页
· Hyper Text Markup Language,超文本标记语言(html)
· Hyper Text Transfer Protocol,超文本传输协议

- Listen:监听地址:端口(80)
- ServerName:本站点注册的DNS名称(空缺)
- DocumentRoot:网页根目录(/var/www/html)
- DirectoryIndex:起始页/首页文件名(index.html)

######################################################################

实验一:搭建基本的WEB服务器
虚拟机Server0:
1.安装httpd(Apache)软件包
# systemctl install -y httpd
2.启动httpd服务,设置开机自启动
# systemctl start httpd
# systemctl enable httpd
3.书写页面
# vim var/www/html/index.html
# cat /var/www/html/index.html
4.虚拟机Desktop0访问测试
# firefox 172.25.0.11

#######################################################################

  DNS服务器:将域名解析为IP地址
  classroom.example.com上的域名

	server0.example.com
	www0.example.com
	webapp0.example.com

#######################################################################

实验二:配置网站的DNS域名
  ServerName:本站点注册的DNS名称(空缺)

虚拟机Server0:
1.修改配置文件:
路径: /etc/httpd/conf/httpd.conf
95行,注释去掉
	ServerName server0.example.com:80

# systemctl restart httpd

虚拟机Desktop0:
# firefox server0.example.com

#######################################################################

实验三:修改网页文件存放路径
	DocumentRoot:网页根目录(var/www/html)

虚拟机Server0
1.修改配置文件
路径: /etc/httpd/conf/httpd.conf

2.创建路径及网页文件
 # mkdir /var/www/myweb
 # echo '<h1>Wo Shi MyWeb' > /var/www/myweb/index.html

3.重启服务
 # systemctl restart httpd

4.访问测试
 # firefox server0.example.com

#######################################################################

	server0.example.com

服务端:/var/www/myweb/pub

=====================================================

二.虚拟Web主机

1.作用:由同一台服务器提供多个不同的Web站点
·区分方式(构建方式)
 - 基于域名的虚拟主机
 - 基于端口的虚拟主机
 - 基于IP地址的虚拟主机

配置文件:
/etc/httpd/conf/httpd.conf	//主配置文件
/etc/httpd/conf.d/*.conf		//子配置文件

			IP:端口
	<VirtualHost *:80>
	  ServerName   DNS名称
	  DocumentRoot 网页根目录
	</VirtualHost>

#######################################################################

实验四:搭建基于域名的虚拟Web主机

虚拟机Server0:
1.创建子配置文件
# vim /etc/httpd/conf.d/dc.conf

<VirtualHost *:80>
	ServerName   www0.example.com
	DocumentRoot /var/www/nsd01
</VirtualHost>
<VirtualHost *:80>
	ServerName   webapp0.example.com
	DocumentRoot /var/www/nsd02
</VirtualHost>
2.创建网页根目录
# mkdir /var/www/nsd01 /var/www/nsd02
# echo '<h1>wo shi nsd01' > /var/www/nsd01/index.html
# echo '<h1>wo shi nsd02' > /var/www/nsd02/index.html
3.重启服务
# systemctl restart httpd

注意:
一旦使用虚拟Web主机,主配置文件中ServerName与DocumentRoot失效,所有站点都需要使用虚拟Web主机来实现

######################################################################

配置网页内容访问
· 使用<Directory>配置区段
 - 每个文件夹自动继承父目录的访问控制
 - 除非针对子目录有明确设置

· 格式:
<Directory />
	AllowOverride none
	Require all denied
</Directory>

########################################################################

实验五:配置网页内容访问

 在Web网站 http://server0.example.com 的
 DocumentRoot 目录下创建一个名为 private 的子目录

虚拟机Server0
1.查看http://server0.example.cpm 的DocumentRooot目录
# vim /etc/httpd/conf.d/nsd01.conf

2.创建目录,建立网页文件
# mkdir /var/www/myweb/private
# echo '<h1>wo shi private' > /var/www/myweb/private/index.html
# cat /var/www/myweb/private/index.html
<h1>wo shi private

3.本机及虚拟机desktop0分别测试
# firefox server0.example.com/private
# curl server0.example.com/private/

4.从server0上,任何人都可以浏览private的内容,但是从其他系统不能访问这个目录的内容

# vim /etc/httpd/conf.d/tc.conf
<Directory /var/www/myweb/private>
	Require ip 172.25.0.11
</Directory>

# systemctl restart httpd

5.本机及虚拟机Desktop0分别测试
# firefox server0.example.com/private
# curl server0.example.com/private/

########################################################################

使用自定义Web根目录

· 调整Web站点http://server0.example.com的网页目录,要求如下:

1.新建目录webroot,作为此站点新的网页目录
# mkdir /webroot
# echo '<h1>wo shi webroot' > /webroot/index.html
# cat /webroot/index.html
<h1>wo shi webroot

2.修改虚拟Web主机配置文件
 /etc/httpd/conf.d/dc.conf
<VirtrualHost *:80>
  ServerName   server0.example.com
  DocumentRoot /webroot
</VirtualHost>

3.修改访问控制配置文件
 /etc/httpd/conf.d/tc.conf
<Directory /webroot>
  Require all granted
</Directory>

4.重启httpd服务

5.SELinux策略,安全上下文值(路径的进入及配置文件读取)

  · 方式1:参照标准目录,重设新目录的属性
   - chcon [-R] --reference=模板目录 新目录

	//查看安全上下文
	# ls -Zd /var/www
	# ls -Zd /webroot
	# chcon -R --reference=/var/www /webroot
	# ls -Zd /webroot

=======================================================

三.部署动态网站
· 静态页面
  - 服务端原始页面
  - 无数据处理
· 动态页面
  - php
  - wsgi
  - jsp

虚拟机Server0
1.部署python页面
# cd /var/www/nsd02
# wget http://classroom.example.com/pub/materials/webinfo.wsgi
# cat webinfi.wsgi

2.方便用户的访问,页面跳转
# vim /etc/httpd/conf.d/nsd01.conf
<VirtualHost *:80>
	ServerName webapp0.example.com
	DocumentRoot /var/www/nsd02/webinfo.wsgi
	Alias / /var/www/nsd02/webinfo.wsgi
	#当客户端访问网页站根目录时,实现页面跳转,将webinfo.wsgi呈现
</VirtualHost>

3.重启服务验证
# system restart httpd
# firefox webapp0.example.com

4.安装python脚本语言翻译软件,负责解析python页面的代码0
# yum install -y mod_wsgi

5.修改虚拟Web主机配置文件,实现httpd进行转义和翻译

<VirtualHost *:80>
        ServerName webapp0.example.com
        DocumentRoot /var/www/nsd02/
        WSGIScriptAlias / /var/www/nsd02/webinfo.wsgi
</VirtualHost>

6.重启httpd服务验证
# systemctl restart httpd
# firefox webapp0.example.com
# curl webapp0.example.com

  · UNIX时间戳:从1970-1-1 0:0:0算起,到达现在所经历q的秒数

7.修改虚拟主机侦听在端口8909

Listen 8909
<VirtualHost *:8909>
        ServerName webapp0.example.com
        DocumentRoot /var/www/nsd02/
        WSGIScriptAlias / /var/www/nsd02/webinfo.wsgi
</VirtualHost>

8.SELinux策略,非默认端口的开放
# semanage port -l
# semanage port -a -t http_port_t -p tcp 8909

	-a:添加 -t:类型 -p:协议
# systemctl restart httpd
# firefox webapp0.example.com
# curl webapp0.example.com

· 端口优先级大于域名












