日志管理
一.日志的功能
1.日志的功能
· 系统和程序的日记本
  - 记录系统,程序运行中发生的各种事件
  - 通过查看日志,了解及排除故障
  - 信息安全控制的"依据"
2.查看文本日志消息
· 通过分析工具
  - tail、tailf(实时跟踪日志消息)、less、grep等文本浏览/检索命令
  - awk、sed等格式化过滤工具
· 专用分析工具
  - Webmin系统管理套件
  - Webalizer、AWStats等日志统计套件
· 路径
/var/log/messages       //记录内核消息,各种服务的公共消息
/var/log/dmesg          //记录系统启动过程的各种消息
/var/log/cron           //记录与cron计划任务相关的消息
/var/log/maillog        //记录邮件收发相关的消息
/var/log/secure         //记录与访问限制相关的安全消息

· 由系统服务rsyslog统一记录/管理
  - 日志消息采集用文本格式
  - 主要记录时间发生的时间,主机,进程,内容

3.用户登陆分析
· users、who、w命令
  - 查看已登陆的用户信息，详细度不同
· last、lastb命令
  - 查看最近登陆成功/失败的用户信息

# users
# who
# w

# last		#查看登陆成功的用户信息
# lasttb	#查看登录失败的用户信息

4.日志消息的优先级
· Linux内核定义的事件紧急程度
  - 分为0~7共8种优先级别
  - 其数值越小，表示对应事件越紧急/重要
  
  0 EMERG (紧急)	会导致主机系统不可用的情况
  1 ALERT (警告)	必须马上采取措施解决的问题
  2 CRIT (严重)		比较严重的情况
  3 ERR (错误)		运行出现错误
  4 WARNING (提醒)	可能会影响系统功能的事件
  5 NOTICE (注意)	不会影响系统但值得注意
  6 INFO (信息)		一般信息
  7 DEBUG (调试)	程序或系统调试信息等

5.使用journalctl工具
· 提取由sysremd-journal服务收集的日志
  - 主要包括内核/系统日志、服务日志
· 常见用法
  - journalctl | grep 关键词
  - journalctl -u 服务名 [-p 优先级]
  - journalctl -n 消息条数
  - journalctl --since="yyyy-mm-dd HH:MM:SS" --until="yyyy-mm-dd HH:MM:SS"

# systemctl restart httpd
# journalctl -u httpd 

=============================================================

二.systemctl服务管理

· 一个更高效的系统&服务管理器
  - 开机服务并行启动,各系统服务间的精确依赖
  - 配置目录: /etc/systemd/system/
  - 服务目录: /lib/systemd/system/
  - 主要管理工具:systemctl

· 服务的管理
  systemvtl start 服务名		#启动服务
  systemvtl stop 服务名			#停止服务
  systemvtl restart 服务名		#重启服务
  systemvtl ststus 服务名		#查看服务当前状态

  systemvtl enable 服务名		#开机自启
  systemvtl disable 服务名		#开机不自启
  systemvtl is-enabled 服务名		#查看服务自启状态

· 运行模式的管理(运行级别)
 RHEL5,RHEL6:	

  0：关机
  1：单用户模式（破解密码、修复系统）
  2：字符模式（不支持网络）
  3：字符模式（支持网络）
  4：无定义
  5：图形模式
  6：重启

  	     0
  开机启动   v
  	     6

  - 切换运行级别的命令 init
  # init 3 切换到字符界面
  # init 5 切换到图形界面

 RHEL7: 运行模式
  systemctl -t --all
  multi-user.target :字符模式
  graphical.target:图形模式
  · 修改当前运行模式(重启失效)
    systemctl isolate multi-user.target
    systemctl isolate grphical.target
  · 修改默认运行模式(重启有效)
    systemctl set-default graphical.target
    systemctl set-default multi-user.target

· unit配置单元
  · 不同的unit决定了一组相关的启动任务
   - service:后台独立服务
   - socket:套接字,类似于xinetd管理的临时服务
   - target:一套配置单元的组合,类似于传统"运行级别"
   - device:对应udev规则标记的某个设备
   - mount,automount:挂载点,触发挂载点

=========================================================

三.Cobbler装机平台(见05.txt)

=========================================================

四.PATH变量应用:提供命令搜寻路径
  系统环境变量:由系统定义完成且赋值完成

  # echo $PATH
  /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin

###########################################################

[root@svr7 ~]# vim /usr/local/bin/hello.sh
[root@svr7 ~]# chmod +x /usr/local/bin/hello.sh
[root@svr7 ~]# hello.sh 
hello world!

