Day 05 监控概述 、 Zabbix基础 、 Zabbix监控服务

一.监控概述

· 监控的目的
  1.报告系统运行状况
    - 每一部分必须同时监控
    - 内容暴扣吞吐量,反应时间,使用率等
  2.提前发现问题
    - 进行服务器性能调整前,知道调整什么
    - 找出系统的瓶颈在什么地方

· 监控的资源类别
  1.公开数据
    - Web,ftp,ssh,数据库等应用服务
    - TCP或UDP端口
  2.私有数据
    - CPU,内存,磁盘,网卡流量等使用信息
    - 用户,进程等运行信息
     
  · 被监控主机需安装agent(每一台)
  · agent a
  
· 监控软件
  1.系统监控命令
  · ps                               · ifconfig
  · uptime                           · netstat或ss
  · free                             · ping
  · swapon -s                        · traceroute
  · df -h                            · iostat
  2.自动化监控系统
  · Cacti
    - 基于SNMP协议的监控软件,拥有强大的绘图能力
  · Nagios
    - 基于Agent监控,强大的状态检查与报警机制
    - 插件极多,自己写监控脚本潜入到Nagios非常方便
  · Zabbix
    - 基于多种监控机制,支持分布式监控(树型结构)
  3.部署监控服务器ZAbbix Server
    1) 源码安装Zabbix Server
    · 先安装相关依赖包
    # yum -y install net-snmp-devel \
    >curl-devel
    # yum -y install  \
    > libevent-devel-2.0.21-4.el7.x86_64.rpm         //在lnmp-soft中
    # tar -xf zabbix-3.4.4.tar.gz
    # cd zabbix-3.4.4/
    # ./configure  --enable-server \
    > --enable-proxy --enable-agent --with-mysql=/usr/bin/mysql_config \
    > --with-net-snmp --with-libcurl
    // --enable-server安装部署zabbix服务器端软件
    // --enable-agent安装部署zabbix被监控端软件
    // --enable-proxy安装部署zabbix代理相关软件
    // --with-mysql配置mysql_config路径
    // --with-net-snmp允许zabbix通过snmp协议监控其他设备
    // --with-libcurl安装相关curl库文件，这样zabbix就可以通过curl连接http等服务，测试被监控主机服务的状态
    # make && make install
  4.初始化Zabbix,配置监控服务器
  
    1) 创建数据库，上线Zabbix的Web页面
   # mysql
   mysql> create database zabbix character set utf8;
   //创建数据库，支持中文字符集
   mysql> grant all on zabbix.* to zabbix@'localhost' identified by 'zabbix';
   //创建可以访问数据库的账户与密码
   # cd lnmp_soft/zabbix-3.4.4/database/mysql/
   # mysql -uzabbix -pzabbix zabbix < schema.sql
   # mysql -uzabbix -pzabbix zabbix < images.sql
   # mysql -uzabbix -pzabbix zabbix < data.sql
    //刚刚创建是空数据库，zabbix源码包目录下，有提前准备好的数据
    //使用mysql导入这些数据即可（注意导入顺序）
    
    2) 上线Zabbix的Web页面
    # cd lnmp_soft/zabbix-3.4.4/frontends/php/
    # cp -r * /usr/local/nginx/html/
    # chmod -R 777 /usr/local/nginx/html/*
    
    3) 修改Zabbix_server配置文件，设置数据库相关参数，启动Zabbix_server服务
    # vim /usr/local/etc/zabbix_server.conf
    
    DBHost=localhost
    //数据库主机，默认该行被注释
    DBName=zabbix
    //设置数据库名称
    DBUser=zabbix
    //设置数据库账户
    DBPassword=zabbix
    //设置数据库密码，默认该行被注释
    LogFile=/tmp/zabbix_server.log    
    //设置日志，仅查看以下即可
    [root@zabbixserver ~]# useradd -s /sbin/nologin zabbix
    //不创建用户无法启动服务
    
    # zabbix_server                      //启动服务
    
    4) 确认连接状态，端口10051
    # ss -ntulp | grep zabbix_server
    · 如果是因为配置文件不对，导致服务无法启动时，不要重复执行zabbix_server,一定要先使用killall zabbix_server关闭服务后，再重新启动一次
    
    5) 浏览器访问Zabbix_server服务器的Web页面
    # firefox http://192.168.2.5/index.php
    //第一次访问，初始化PHP页面会检查计算机环境是否满足要求，如果不满足会给出修改建议
    //默认会提示PHP的配置不满足环境要求，需要修改PHP配置文件
    
    根据错误提示，修改PHP配置文件，满足Zabbix_server的Web环境要求,php-bcmath和php-mbstring都在lnmp_soft目录下有提供软件包
    
    # yum -y install  php-gd php-xml
    # yum install php-bcmath-5.4.16-42.el7.x86_64.rpm
    # yum install php-mbstring-5.4.16-42.el7.x86_64.rpm
    # vim /etc/php.ini
    date.timezone = Asia/Shanghai                //设置时区
    max_execution_time = 300                    //最大执行时间，秒
    post_max_size = 32M                        //POST数据最大容量
    max_input_time = 300                        //服务器接收数据的时间限制
    memory_limit = 128M                        //内存容量限制
    # systemctl restart php-fpm
    
    修改完PHP配置文件后，再次使用浏览器访问服务器，则会开始初始化
    数据库端口:3306
    数据库密码:zabbix
    
    · 配置完成后,使用用户admin和密码zabbix登录,设置语言环境为中文
    
  5.配置监控客户端
  · 修改Zabbix_agent配置文件，启动Zabbix_agent服务,使服务器监控自身
  # vim /usr/local/etc/zabbix_agentd.conf
  Server=127.0.0.1,192.168.2.5                      //允许哪些主机监控本机
  ServerActive=127.0.0.1,192.168.2.5                //允许哪些主机通过主动模式监控本机
  Hostname=zabbixserver                            //设置本机主机名
  LogFile=/tmp/zabbix_agentd.log                    //设置日志文件
  UnsafeUserParameters=1                            //是否允许自定义key
  # zabbix_agentd                                   //启动监控agent
  
  · 配置web1,web2被监控服务器
    1) 源码编译安装zabbbix,修改配置
    # cd /root/myTools/lnmp-soft/
    # tar -xf zabbix[Tab]
    # cd zabbix[Tab]
    # ./configure --enable-agent
    # make && make install
    # vim /usr/local/etc/zabbix_agentd.conf
    Logfile=/tmp/zabbix_agentd.log
    Hostname=zabbixclient_webx[1-2]                  //被监控端自己的主机名
    Server=127.0.0.1,192.168.2.5                     //谁可以监控本机（被动监控模式）
    ActiveServer=127.0.0.1,192.168.2.5               //谁可以监控本机（主动监控模式）
    EnableRemoteCommands=1                           //监控异常后，是否允许服务器远程过来执行命令，如重启某个服务
    UnsafeUserParameters=1                           //是否允许自定义key监控
    # zabbix_agentd                                  //启动agent服务
    2) 拷贝启动脚本（非必须操作，可选做），有启动脚本可以方便管理服务，启动与关闭服务。启动脚本位于zabbix源码目录下。
    # cd misc/init.d/fedora/core
    # cp zabbix_agentd /etc/init.d/
    # /etc/init.d/zabbix_agentd start
    # /etc/init.d/zabbix_agentd stop
    # /etc/init.d/zabbix_agentd status
    # /etc/init.d/zabbix_agentd restart

  6.自定义Zabbix监控项目
    1) 步骤:
      · 创建自定义key
      · 创建监控项目
      · 创建监控图形
      · 将监控模板关联到主机
      
    2) 监控主机创建自定义key（在192.168.2.100操作）
      # vim /usr/local/etc/zabbix_agentd.conf
      Include=/usr/local/etc/zabbix_agentd.conf.d/                //加载配置文件目录
      # cd /usr/local/etc/zabbix_agentd.conf.d/
      # vim count.line.passwd
      UserParameter=count.line.passwd,wc -l /etc/passwd | awk ' {print $1} '
        //自定义key语法格式:
      //UserParameter=自定义key名称,命令
    3) 测试自定义key是否正常工作
      # killall  zabbix_agentd
      # zabbix_agentd                                //重启agent服务
      # zabbix_get -s 127.0.0.1 -k count.line.passwd
        21
        如zabbix_get命令执行错误，提示Check access restrictions in Zabbix agent configuration，则需要检查agent配置文件是否正确：
      # vim /usr/local/etc/zabbix_agentd.conf
      Server=127.0.0.1,192.168.2.5
      ServerActive=127.0.0.1,192.168.2.5
      
  7.创建监控模板
    1) 添加监控模板
    2) 创建应用
    3) 创建监控项目item（监控项）
    4) 创建图形
    5) 查看监控数据图形
