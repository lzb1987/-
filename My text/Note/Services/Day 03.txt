Day 03 Split分离解析 RAID磁盘阵列 进程管理 日志管理
一.回顾
1.常见的DNS服务器有哪些
	主DNS	一级域名DNS	二级域名DNS	三级域名DNS	根域DNS
2.常见的DNS资源解析记录
	NS	A	PTR(反向解析)	   CNAME

=============================================================

二.Split分离解析(视图解析)
1.概述
· 当受到客户机的DNS查询请求的时候
  - 能够区分客户机的来源地址
  - 能够为不同类别的客户机提供不同的解析结果(IP地址)

  - 判断客户端来源,不同客户端解析同一个域名得到不同解析结果
  - 意义:让客户端访问网络中最近的服务器
· 典型适用场景:CDN提供的内容分发服务

· 注意点:
1.客户端分类合理,所有客户端都要匹配分类
2.分类匹配由上到下,依次匹配,匹配即停止
        1）同一个区域(sina.com)在多个视图内分别定义，其他地址库文件相互独立，从而实现解析结果的分离
        2）定义view视图后，不允许在view以外出现zone配置

##############################################################

· 环境及需求
  - 权威DNS:svr7.tedu.cn 192.168.4.7
  - 负责区域:sina.com
  - svr7记录分离解析:以www.sina.com为例

客户机来自 解析结果
  192.168.4.207 --> 192.168.4.100
  其他地址 --> 1.2.3.4

· 分离解析
-修改配置文件
view "nsd"{
	match-clients { 192.168.4.207;.. ..; };	//客户端源IP地址
	zone "sina.com" IN {
	type master;
	file "sina.com.zone";
	};
};

view "other"{
	match-clients { any; };
	zone "sina.com" IN {
	type master;
	file "sina.com.other";
	};
};
-建立地址库文件sina.com.zone和sina.com.other
-重启服务

· 对客户机ip抽象封装
· 多区域的分离解析

acl myip{ 192.168.4.8; 192.168.4.123; 192.168.4.66; 192.168.4.58 };

view "nsd" {
 match-clients { myip };
 zone
 ...
};

==================================================================

三.RAID磁盘阵列
· 廉价冗余磁盘阵列
  - 通过硬件/软件技术，将多个较小/低速的磁盘整合成一个大磁盘
  - 阵列的价值：提升I/O效率、硬件级别的数据冗余
  - 不同RAID级别的功能、特性各不相同

· RAID 0 条带模式
  - 同一个文档分散存放在不同磁盘
  - 并行写入以提高效率
  - 至少需要2块磁盘

· RAID 1 镜像模式
  - 一个文档复制成多份，分别写入不同磁盘
  - 多份拷贝提高可靠性，效率无提升

· RAID 0+1/RAID 1+0
  - 整合RAID 0、RAID 1的优势
  - 并行存取提高效率、镜像写入提高可靠性
  - 至少4块磁盘

· RAID 5，高性价比模式
  - 相当于RAID0和RAID1的折中方案
  - 需要至少3块磁盘的容量来存放校验数据

· RAID 6，高性价比/可靠模式
  - 相当于扩展的RAID5阵列，提供2份独立校验方案
  - 需要至少4块磁盘的容量来存放校验数据

RAID阵列实现方式
· 硬RAID:由RAID控制卡管理阵列
  - 主板 --> 阵列卡 --> 磁盘 --> 操作系统 --> 数据
· 软RAID:由操作系统来管理阵列
  - 主板 --> 磁盘 --> 操作系统 --> RAID软件 --> 数据

==============================================================

四.进程管理
  程序:静态的代码,占用硬盘空间

  进程:动态执行的代码,占用内存和CPU

  父进程 子进程 --- 树型结构

  进程的唯一编号:PID 越小越优先运行

1.查看进程树

· pstree
  -格式:pstree [选项] [PID或用户名]
· 常用命令选项
  -a:显示完整的命令行
  -p:列出对应PID编号
  systemd - 所有进程的父进程

###################################################

  # pstree
  # pstree lisi
  # pstree -p lisi
  # pstree -ap lisi

####################################################

· ps—— Processes Snapshot
  -格式:ps [选项] ...
· 常用命令选项
  -aux:显示当前终端所有进程(a),当前用户在所有终端下的进程(x),以用户格式输出(u)
  -elf:显示系统内所有进程(e),以长格式输出(l)信息,包括最完整的信息(f)
        · ps aux 操作
          - 列出正在运行的所有进程

用户 进程ID %CPU %内存 虚拟内存 固定内存 终端 状态 起始时间 CPU时间 程序指令

· ps -elf
  - 列出正在运行的所有进程
  - 可以看到进程的父进程PID
  PPID：父进程的PID号
  PRI/NI：进程优先级，数值越小优先级越高

· wc -l统计行数
  统计进程数:
  # ps -aux | wc -l
  # ps -aux | cat -n | tail -1

##########################################################

2.进程动态排名

# top [-d 刷新秒数] [-U 用户名]

· top交互操作指令
  - ?：查看帮助
  - P、M：根据%CPU、%MEM降序排列
  - T：根据进程消耗的TIME降序排列
  - k：杀死指定的进程
  - q：退出top程序

3.进程检索

# pgrep [选项] ... 查询条件
· 支持模糊查询

· 常用命令选项
  -l：输出进程名，而不仅仅是PID
  -U：检索指定用户的进程
  -t：检索指定终端的进程
  -x：精确匹配完整的进程名

#####################################################

# pgrep - log
# pgrep -lU lisi -t pts/1
# pgrep -lU lisi -t pts/2
//pts/1 <--> 终端号

=====================================================

4.控制进程

· 进程的前后台调度
  · 前台启动
    - 输入正常命令行，运行期间占用当前终端
  · 后台启动
    - 在命令行末尾添加"&"符号，不占用当前终端
  · Ctrl + z组合键
    - 挂起当前进程（暂停并转入后台）
  · jobs命令
    - 查看后台任务列表
  · fg命令
    - 将后台任务恢复到前台运行
  · bg命令
    - 激活后台被挂起的任务

#############################################################

# sleep 1000 &		   //将进程放入后台运行
# sleep 800
ctrl+z			   //将进程暂停放入后台
# bg 2			   //将后台编号为2的挂起进程恢复运行
# jobs			   //查看后台进程信息
[1]-  运行中               sleep 1000 &
[2]+  运行中               sleep 800 &
# fg 2			   //将后台编号为2的进程恢复前台运行
sleep 800

==============================================================

5.进程处决
· 干掉进程的不同方法
  - Ctrl+c组合键，中断当前命令
  - kill [-9] PID...、kill [-9] %后台任务编号
  - killall [-9] 进程名...
  - pkill 关键字...	//模糊查询查杀(包含即死)
· 强制踢出一个用户
  killall -9 -u 用户名	//杀死该用户开启的所有进程（用户由登陆变成未登陆）
  书写防火墙或SELinux禁止用户登录

##############################################################

# sleep 900 &
[3] 5905
# jobs -l
[3]+  5905 运行中               sleep 900 &
# kill 5905			//根据PID杀死进程
# jobs
[3]+  已终止               sleep 900
# sleep 1000 &
[1] 5928
# killall -9 sleep		//根据进程名,强制杀死进程
[1]+  已杀死               sleep 1000

===============================================================

五.日志管理

1.日志的功能
· 系统和程序的日记本
  - 记录系统,程序运行中发生的各种事件
  - 通过查看日志,了解及排除故障
  - 信息安全控制的"依据"
2.查看文本日志消息
· 通过分析工具
  - tail、tailf、less、grep等文本浏览/检索命令
  - awk、sed等格式化过滤工具
· 专用分析工具
  - Webmin系统管理套件
  - Webalizer、AWStats等日志统计套件
· 路径
/var/log/messages	//记录内核消息,各种服务的公共消息
/var/log/dmesg		//记录系统启动过程的各种消息
/var/log/cron		//记录与cron计划任务相关的消息
/var/log/maillog	//记录邮件收发相关的消息
/var/log/secure		//记录与访问限制相关的安全消息

· 由系统服务rsyslog统一记录/管理
  - 日志消息采集用文本格式
  - 主要记录时间发生的时间,主机,进程,内容

#############################################################


