约束条件的作用： 限制如何给字段赋值。

create  table  t25(
name  char(3) not  null,
age   tinyint(2) default  21,
sex   enum("m","w") not null  default "m"
);
desc  t25;
insert  into t25(name)  values("bob");
insert  into t25   values("tom",18,"w");
insert  into t25   values(null,null,null);

create  table  t26(
name  char(4) not  null  default  "" ,
age   tinyint(2) default  21,
sex   enum("m","w") not null  default "m"
);
insert  into t26   values("null",null,"m");
insert  into t26   values("",null,"m");
insert  into t26   values(null,null,"m");
ERROR 1048 (23000): Column 'name' cannot be null

+++++++++++++++++++++++++++++++++++++
修表结构命令的格式?
alter  table 表名   执行动作;


alter table  t6 
add  email  varchar(50) default "stu@tedu.cn",
add tel char(11);

desc  t6;
select  * from t6;

mysql> alter table  t6
    -> add  class char(7)default "nsd1806" first,
    -> add  qq  varchar(11) after name;

desc  t6;
select  * from t6;

mysql> alter  table t6  modify name varchar(10);


mysql> alter table t6 
modify sex enum('boy','girl','no') not null default "no" 
after  name;

mysql> desc  t6;

mysql> alter table  t6 
change email mail varchar(50) default "stu@tedu.cn";

mysql> desc  t6;

mysql> alter  table  t6  drop  stu_num, drop mail;
mysql> desc t6;
mysql> select  * from t6;


mysql> alter table  t6  rename  stuinfo ;

mysql> show  tables;

mysql> select  * from  stuinfo;

++++++++++++++++++++++++++++++++++++++++
mysql键值：作用1 限制如何给字段赋值 作用2 给字段的值排队。

普通索引 index
主键     primary key
外键     foreign key

+++++++++++++++++++++++++
普通索引 index
1 索引介绍
2 索引的优点
3 索引的确定
4 使用索引
4.0 索引使用规则
4.1 查看
查看表是否创建索引字段 desc  表名；
查看索引详细信息  show  index  from 表名；

4.2 创建
4.2.1 建表创建index字段
create table  t27(
name char(10),
age int(2),
class char(7),
index(name),
index(age)
);

desc  t27;
show index from  t27\G;


4.2.2 给已有表创建index字段
mysql> create index  abc  on  t5(name);
mysql> show index  from  t5\G;
mysql> desc t5;
+----------+----------+------+-----+---------+-------+
| Field    | Type     | Null | Key | Default | Extra |
+----------+----------+------+-----+---------+-------+
| name     | char(10) | YES  | MUL | NULL    |       |
| birthday | date     | YES  |     | NULL    |       |
| meetting | datetime | YES  |     | NULL    |       |
| start    | year(4)  | YES  |     | NULL    |       |
| sktime   | time     | YES  |     | NULL    |       |
+----------+----------+------+-----+---------+-------+

mysql> show index from t5\G;
*************************** 1. row ***************************
        Table: t5
   Non_unique: 1
     Key_name: abc
 Seq_in_index: 1
  Column_name: name
    Collation: A
  Cardinality: 3
     Sub_part: NULL
       Packed: NULL
         Null: YES
   Index_type: BTREE
      Comment: 
Index_comment: 
1 row in set (0.00 sec)

ERROR: 
No query specified

mysql> explain select  * from  t5 where name="abc";

4.3 删除索引  mysql> drop index  name on t27;

++++++++++++++++++++++++++++++++++++++++++++++++++
primary  key 使用规则？
建表时创建主键：
create table  t28(
name  char(10) primary key,
age int(2)
);
mysql> desc  t28;


create table  t29(
name  char(10),
age int(2),
primary key(name)
);
mysql> desc 29;

insert into  t29 values("tom",29);
insert into  t29 values(null,12);
insert into  t29 values("tom",19);
insert into  t29 values("bob",29);
select  * from t29;

delete  from  t5;
select  * from t5;
desc t5;
mysql> alter table t5  add primary key(name);
desc t5;
show index  from  t5\G;

复合主键：表中多个字段作主键,做主键字段的值不允许同时重复。

jfb
名字  学号     学费

pri   pri
name  stu_id   pay
bob   1        yes

mysql> create table  jfb(
    -> name  char(10),
    -> stu_id  int(1),
    -> pay  enum("yes","no"),
    -> primary key(name,stu_id)
    -> );
Query OK, 0 rows affected (0.16 sec)

mysql> desc jfb;
+--------+------------------+------+-----+---------+-------+
| Field  | Type             | Null | Key | Default | Extra |
+--------+------------------+------+-----+---------+-------+
| name   | char(10)         | NO   | PRI | NULL    |       |
| stu_id | int(1)           | NO   | PRI | NULL    |       |
| pay    | enum('yes','no') | YES  |     | NULL    |       |
+--------+------------------+------+-----+---------+-------+
3 rows in set (0.00 sec)

insert into jfb values("bob",1,"yes");
insert into jfb values("bob",1,"no"); 错误的
insert into jfb values("bob",2,"no");
insert into jfb values("lucy",2,"no");
insert into jfb values(null,null,"no");错误的
select  * from  jfb;

+++++++++++++++++++++++++++
mysql>alter table jfb drop primary key;

mysql>desc  jfb;
insert into jfb values("bob",1,"yes");
insert into jfb values("bob",1,"yes");
insert into jfb values("bob",1,"yes");
select  * from  jfb;

+++++++++++++++++++++++++++++++++++++
mysql> alter table jfb add primary key(name,stu_id);
ERROR 1062 (23000): Duplicate entry 'bob-1' for key 'PRIMARY'

mysql> delete from jfb;
Query OK, 6 rows affected (0.08 sec)

mysql> alter table jfb add primary key(name,stu_id);
Query OK, 0 rows affected (0.29 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> desc jfb;
+--------+------------------+------+-----+---------+-------+
| Field  | Type             | Null | Key | Default | Extra |
+--------+------------------+------+-----+---------+-------+
| name   | char(10)         | NO   | PRI | NULL    |       |
| stu_id | int(1)           | NO   | PRI | NULL    |       |
| pay    | enum('yes','no') | YES  |     | NULL    |       |
+--------+------------------+------+-----+---------+-------+
3 rows in set (0.00 sec)

primary key 通常与 AUTO_INCREMENT 连用,实现字段值的自动增长 让字段的值自加1

 
create table  t221(
id  int(1) primary key auto_increment,
age tinyint(1) unsigned, 
class char(4) 
);

desc t221;
mysql> insert into t221(age,class)values(12,"1806");
mysql> insert into t221(age,class)values(82,"1807");
mysql> insert into t221(age,class)values(12,"1806");
mysql> insert into t221(age,class)values(12,"1806");
mysql> select  * from t221; 
mysql> select  * from t221 where id=3;

mysql> insert into t221 values(7,99,"1807");
mysql> insert into t221 values(null,23,"1807");
+++++++++++++++++++++++++++++++++
外键的使用：
外键: 给表的字段赋值时，字段的值在另外一张表的字段值里选择。
使用规则？
创建外键
create  table  xfb(
fname char(10) primary key,
pay float(7,2) default 28000
)engine=innodb;

insert into xfb(fname) values("bob");
insert into xfb(fname) values("tom");
insert into xfb(fname) values("lucy");
mysql> select  * from xfb;
+-------+----------+
| fname | pay      |
+-------+----------+
| bob   | 28000.00 |
| lucy  | 28000.00 |
| tom   | 28000.00 |
+-------+----------+

create  table xsb(
xname char(10),
sex  enum("b","g") default "g",
foreign key(xname) references xfb(fname)
on update cascade  on delete cascade
)engine=innodb;

mysql> desc  xsb;
mysql> show create table xsb;
测试
mysql> insert into xsb(xname)values("jack");
mysql> insert into xsb(xname)values("bob");
mysql> insert into xsb(xname)values("tom");
mysql> insert into xsb(xname)values("lucy");

mysql> insert into xfb(fname)values("jack");

mysql> insert into xsb(xname)values("jack");
mysql> select  * from xsb;
