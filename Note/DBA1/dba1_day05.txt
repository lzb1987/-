物理备份
50
]# mkdir  /bakdb
]# cp -r /var/lib/mysql /bakdb/db.bak

物理恢复
51
]# rm -rf /var/lib/mysql/*
]# systemctl  stop mysqld
]# rm  -rf /var/lib/mysql
]# scp  192.168.4.50:/bakdb/db.bak  /root/
]# mv /root/db.bak  /var/lib/mysql
]# chown -R mysql:mysql /var/lib/mysql
]# systemctl  start mysqld
++++++++++++++++++++++++++++++++++++++
重新初始化授权库,只适合没有存储数据的数据库服务器。
192.168.4.51
[root@node1 ~]# systemctl  stop mysqld
[root@node1 ~]# rm -rf /var/lib/mysql/*
[root@node1 ~]# ls /var/lib/mysql
[root@node1 ~]# 
[root@node1 ~]# systemctl  start mysqld
[root@node1 ~]# ls /var/lib/mysql

]#grep  password  /var/log/mysqld.log
]# mysql -hlocalhost -uroot -p'sfK,)-JH<4p2'

mysql> alter user  user() identified by "123qqq...A";
mysql> quit;

]# mysql -hlocalhost -uroot -p123qqq...A
mysql> show databases;
+++++++++++++++++++++++++++++++++++++++++++++++++++
休息到11:15

完全备份
备份所有数据: 
一台服务器的所有数据
一个库的所有数据
一张表的所有数据

备份新产生的数据
差异备份：备份完全备份后，所有新产生的数据
增量备份：备份上次备份后，所有新产生的数据
         18:00   t1    文件名  数据
1  完全          10    1.sql    10
2  差异          5     2.sql    5
3                7     3.sql    12
4                2     4.sql    14       
5		 1     5.sql    15
6                3     6.sql    18
7 差异           9     7.sql    27


1  完全          10    1.sql    10
2  增量          5     2.sql    5
3                7     3.sql    7
4                2     4.sql    2
5                1     5.sql    1
6                3     6.sql    3
7  增量          9     7.sql    9
++++++++++++++++++++++++++++++++++++++++++
完全备份mysqldump
命令格式：
]#  mkdir /mydata
]#  mysqldump -uroot -pA...qqq123 -A > /mydata/all.sql
]#  ls /mydata/
]#  cat /mydata/all.sql 

]# mysqldump -uroot -pA...qqq123 db3 > /mydata/db3.sql
]# ls /mydata/
]# cat /mydata/db3.sql
 
]#mysqldump -uroot -pA...qqq123 db3 user > /mydata/db3_user.sql
]# ls /mydata/
]# cat /mydata/db3_user.sql


]# mysqldump -uroot -pA...qqq123 -B mysql db3 > /mydata/twodb.sql
]# ls /mydata/
]# cat /mydata/twodb.sql 





完全恢复mysql
命令格式: ]# mysql  -uroot  -p密码  [数据库名]  <  备份文件


mysql> drop  database  db3;
mysql> create  database  db3;
]#mysql -uroot -pA...qqq123  db3 < /mydata/db3.sql

或

mysql> drop  database  db3;
mysql> create  database  db3;
mysql> use  db3;
mysql> source /mydata/db3.sql


insert into  db3.user(name) values("wang");
+++++++++++++++++++++++++++++++
增量备份：
方法1： 时时增量备份 启用mysql服务的binlog日志

binlog日志介绍：二进制日志，记录在数据库服务器上执行的除查询之外的sql命令。默认没有启用。

show  databases;
show tables;
desc mysql.user;
select  

create  drop insert  update  delete
mysql> show variables like "binlog_format";
+---------------+-------+
| Variable_name | Value |
+---------------+-------+
| binlog_format | ROW   |
+---------------+-------+


++++启用binlog日志
]# vim /etc/my.cnf
[mysqld]
server_id=50
log-bin
binlog_format="mixed"
:wq

]# systemctl  restart  mysqld

[root@host50 ~]# ls /var/lib/mysql/host50-bin.*
/var/lib/mysql/host50-bin.000001  日志文件
/var/lib/mysql/host50-bin.index   日志索引文件

查看日志文件内容
]# mysqlbinlog /var/lib/mysql/host50-bin.000001


]# mysqldump -uroot -pA...qqq123 db3 user > /mydata/user1.sql

]# mysql -uroot -pA...qqq123 db3
mysql> insert into db3.user(name,uid)values("bob",99);
mysql> insert into db3.user(name,uid)values("lucy",89);
mysql> insert into db3.user(name,uid)values("lili",79);
mysql>  select  * from db3.user;
mysql> delete from db3.user where name in ("bob","lili","lucy");
mysql>  select  * from db3.user;

]#mysqlbinlog /var/lib/mysql/host50-bin.000001 | grep -i instert
]#mysqlbinlog /var/lib/mysql/host50-bin.000001 | grep -i delete
]#mysqlbinlog /var/lib/mysql/host50-bin.000001 | grep -i select

++++日志文件的方法：
偏移量pos
时间点

++++使用binlog日志恢复数据
mysqlbinlog 【选项】 mysql-bin.000001  |  mysql   -uroot  -p密码

选项
--start-datetime="yyyy-mm-dd hh:mm:ss" 起始时间
--stop-datetime="yyyy-mm-dd hh:mm:ss" 结束时间
--start-position=数字 起始偏移量
--stop-position=数字  结束偏移量

]#mysqlbinlog --start-position=919  --stop-position=1858  /var/lib/mysql/host50-bin.000001  |  mysql   -uroot  -pA...qqq123

mysql>  select  * from db3.user;

+++++++++++++++++++++++++++++++++++++++++
16:20

++++管理日志文件
1、指定日志文件名称和存储目录
[root@host50 ~]# mkdir /mylog
[root@host50 ~]# chown  mysql /mylog

]# vim /etc/my.cnf
[mysqld]
server_id=50
#log-bin
#log-bin=plj
log-bin=/mylog/plj
binlog_format="mixed"
:wq

]# systemctl  restart mysqld

[root@host50 ~]# ls /mylog/
plj.000001  plj.index
+++++++++++++++++++++++++++++
默认日志文件的大小超过500M时自动创建新的日志文件，

手动创建新的日志文件的方法？
mysql> flush logs;

]# mysql -uroot -pA...qqq123 db3  -e "flush logs"
]# mysqldump -uroot -pA...qqq123 --flush-logs   db3 user > /mydata/user2.sql

]# systemctl restart  mysqld

+++删除已有的binlog日志文件
mysql> reset master;  删除所有的日志文件重新创建日志文件

mysql> purge  master  logs  to "plj.000004"; 把指定编号之前的日志文件删除

+++++++++++++++使用第3方软件 对数据做备份和恢复+++++++++++++++++++++++++
1 装包
]# rpm -ivh libev-4.15-1.el6.rf.x86_64.rpm
]# yum -y install  percona-xtrabackup-24-2.4.7-1.el7.x86_64.rpm

17:25

]# man innobackupex

命令格式
]# innobackupex <选项>

innobackupex完全备份与恢复

完全备份
]#innobackupex --user root --password A...qqq123   /allbak --no-timestamp
]# ls /allbak

+++++恢复
]# systemctl  stop mysqld
]# rm -rf /var/lib/mysql/*
]# innobackupex --user root --password A...qqq123  --apply-log  /allbak

]# innobackupex --user root --password A...qqq123  --copy-back  /allbak

]# ls -l /var/lib/mysql 
]# chown  -R mysql:mysql /var/lib/mysql

]# systemctl  start  mysqld
]# mysql -uroot -pA...qqq123
mysql> show databases;

++++++++++++++++++++

innobackupex增量备份与恢复
备份：
第一次备份 备份所有数据
]# innobackupex  --user root  --password 123qqq...A  /fullbak --no-timestamp

]# ls /fullback


mysql> insert into db5.a values(777);
......

增量备份
]# innobackupex  --user root  --password 123qqq...A  \
--incremental /new1dir  --incremental-basedir=/fullbak --no-timestamp
]# ls  /new1dir
mysql> insert into db5.a values(888);
......

增量备份
]# innobackupex  --user root  --password 123qqq...A \
--incremental  /new2dir  --incremental-basedir=/new1dir --no-timestamp

]# ls /new2dir

增量备份的工作过程：
在线热备不锁表。对innodb存储引擎的表时增量备份

innodb存储引擎 的 有事务日志 和支持事务回滚

cd /var/lib/mysql  事务日志文件
ib_logfile0
ib_logfile1
ibdata1

LSN 日志序列号 

备份目录下的相关配在文件说明：
xtrabackup_checkpoints 记录当前目录数据备份类型和备份数据的信息

ibdata1
ibdata1.mate
xtrabackup_logfile

恢复:
准备恢复数据
合并日志
把备份数据拷贝到数据库目录下
修改数据库目录所有者组为mysql
启动数据库服务
登陆查看数据

休息10分钟 到11:20
练习15分钟 到11:35 
]#systemctl  stop  mysqld
]#rm -rf /var/lib/mysql/*

]#innobackupex --user root --password 123qqq...A --apply-log --redo-only /fullbak/

]#innobackupex --user root --password 123qqq...A --apply-log --redo-only /fullbak/  --incremental-dir=/new1dir
 
]#innobackupex --user root --password 123qqq...A --apply-log --redo-only /fullbak/  --incremental-dir=/new2dir
 
]#innobackupex --user root --password 123qqq...A --copy-back /fullbak/  

]#chown -R mysql:mysql /var/lib/mysql
]#systemctl  start mysqld
]#mysql -uroot -pA...qqq123
++++++++++++++++++++++++++++++++++
innobackupex恢复完全备份中一个表的所有数据

]#innobackupex --user root --password 123qqq...A  --databases="db5"  /db5full  --no-timestamp

> drop table  db5.b;

恢复表：
1 导出表信息
2 创建删除的表
3 删除表空间 存储数据的表文件 表.idb
4 拷贝表信息文件到数据库目录下
5 修改表文件的所有者和组为mysql
6 导入表信息
7 查看表记录

]#nnobackupex --user root  --password A...qqq123 --databases="db5"  --apply-log --export /db5full


mysql> create table  b (name char(10));
mysql> alter  table db5.b  discard  tablespace;

]# cp /db5full/db5/b.{cfg,exp,ibd} /var/lib/mysql/db5/
]# chown  mysql:mysql  /var/lib/mysql/db5/b.*

mysql> alter  table  db5.b  import  tablespace; 
mysql> select  * from  b;

]# rm -rf /var/lib/mysql/db5/b.{cfg,exp}

	练习10分钟 到 14：30



































